import { initDb, saveUser } from './db.js';
import 'dotenv/config';
import { Telegraf, Markup, session } from 'telegraf';

const MANAGER_ID = 339301507;
const bot = new Telegraf(process.env.BOT_TOKEN);

async function main() {
  await initDb(); // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã

  bot.use(session());

  // /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å"
  bot.start((ctx) => {
    ctx.session = {}; // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    ctx.reply(
      'üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî NOSH Guide –±–æ—Ç.\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –∏ —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç.',
      Markup.keyboard([['–ù–∞—á–∞—Ç—å']]).resize()
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å"
  bot.hears('–ù–∞—á–∞—Ç—å', (ctx) => {
    ctx.reply(
      'NOSH Guide ‚Äî —ç—Ç–æ AI-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, –ø–æ–≤—ã—à–∞—é—â–∞—è –≤—ã—Ä—É—á–∫—É –∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –≥–æ—Å—Ç–µ–π —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, –≤–∏–¥–µ–æ-–º–µ–Ω—é, –æ—Ç–∑—ã–≤–æ–≤ –∏ –≥–ª—É–±–æ–∫–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.\n\n–ü–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–Ω–±–æ—Ä–¥–∏–Ω–≥.',
      Markup.keyboard([['–î–∞–ª–µ–µ']]).resize()
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
  bot.hears('–î–∞–ª–µ–µ', (ctx) => {
    ctx.reply(
      '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è:',
      Markup.removeKeyboard()
    );
    ctx.session.waitingForName = true;
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏ –º–µ–Ω—é
  bot.on('text', async (ctx, next) => {
    if (ctx.session.waitingForName) {
      ctx.session.name = ctx.message.text;
      ctx.session.waitingForName = false;
      ctx.reply(
        `–°–ø–∞—Å–∏–±–æ, ${ctx.session.name}!\n\n–¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:`,
        Markup.keyboard([
          [Markup.button.contactRequest('üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º')]
        ]).resize()
      );
    } else if (ctx.session.onboardingStep === 'wait_menu_link') {
      ctx.session.menuLink = ctx.message.text;
      ctx.session.onboardingStep = undefined;

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—É
      const userDataMsg = `
–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø:
üë§ –ò–º—è: ${ctx.session.name || '-'}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${ctx.session.phone || '-'}
üîó –ú–µ–Ω—é: ${ctx.session.menuLink}
üÜî Telegram ID: ${ctx.from.id}
      `;
      ctx.telegram.sendMessage(MANAGER_ID, userDataMsg);

      await saveUser({
        telegram_id: ctx.from.id,
        name: ctx.session.name,
        phone: ctx.session.phone,
        menu_link: ctx.session.menuLink,
        agreed: false,
        payment_status: 'pending'
      });

      ctx.reply(
        '–°–ø–∞—Å–∏–±–æ! –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —Ç—ã —Å–æ–≥–ª–∞—à–∞–µ—à—å—Å—è —Å <a href="https://nosh.guide/docs/terms_of_use">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º</a> –∏ <a href="https://nosh.guide/docs/privacy_policy">–ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö</a>.',
        {
          parse_mode: 'HTML',
          ...Markup.keyboard([['‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω']]).resize()
        }
      );
    } else {
      return next();
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω–∞)
  bot.on('contact', (ctx) => {
    const phone = ctx.message.contact.phone_number;
    ctx.session.phone = phone;
    ctx.replyWithVideo(
        { source: './videos/registration.mp4' },
        { caption: '–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –≤ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–æ —Å—Å—ã–ª–∫–µ:\nhttps://app.nosh.guide/ru/login' }
    ).then(() => {
      ctx.session.onboardingStep = 'wait_registration_confirm';
      ctx.reply(
        '‚úÖ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.',
        Markup.keyboard([['–Ø –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è']]).resize()
      );
    });
  });

  // –ù–æ–≤—ã–π —ç—Ç–∞–ø: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –º–µ–Ω—é
  bot.hears('–Ø –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è', (ctx) => {
    ctx.session.onboardingStep = 'wait_menu_video';
    ctx.replyWithVideo(
      { source: './videos/create_menu.mp4' }, // –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      { caption: '–ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.' }
    ).then(() => {
      ctx.session.onboardingStep = 'wait_menu_created';
      ctx.reply(
        '–ö–æ–≥–¥–∞ –º–µ–Ω—é –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
        Markup.keyboard([['–Ø —Å–æ–∑–¥–∞–ª –º–µ–Ω—é']]).resize()
      );
    });
  });

  // –ù–æ–≤—ã–π —ç—Ç–∞–ø: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –∏ –≤–∏–¥–µ–æ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏
  bot.hears('–Ø —Å–æ–∑–¥–∞–ª –º–µ–Ω—é', (ctx) => {
    ctx.session.onboardingStep = 'wait_menu_link';
    ctx.replyWithVideo(
      { source: './videos/get_menu_link.mp4' }, // –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ—Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      { caption: '–í–∏–¥–µ–æ: –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–Ω—é.' }
    ).then(() => {
      ctx.reply(
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ —Å—é–¥–∞ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—ë –º–µ–Ω—é.',
        Markup.removeKeyboard()
      );
    });
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è —Å –æ—Ñ–µ—Ä—Ç–æ–π
  bot.hears('‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω', (ctx) => {
    ctx.session.agreed = true;
    ctx.reply(
      '–î–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ NOSH Guide ‚Äî 99 ‚ÇΩ/–º–µ—Å\n–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ.',
      Markup.keyboard([['–û–ø–ª–∞—Ç–∏—Ç—å 99 ‚ÇΩ']]).resize()
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å 99 ‚ÇΩ"
  bot.hears('–û–ø–ª–∞—Ç–∏—Ç—å 99 ‚ÇΩ', (ctx) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Best2Pay (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∞)
    const paymentUrl = 'https://best2pay.ru/demo-payment-link'; // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    ctx.reply(
      `–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ:\n${paymentUrl}\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.`,
      Markup.removeKeyboard()
    );
  });

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–æ —Å next()
  bot.on('message', (ctx, next) => {
    console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', ctx.message);
    return next();
  });

  // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
  await bot.launch();
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');

  process.once('SIGINT', () => bot.stop('SIGINT'));
  process.once('SIGTERM', () => bot.stop('SIGTERM'));
}

main();
